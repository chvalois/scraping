{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.3", "generated_at": "2024-07-25T10:10:15.139843Z", "invocation_id": "ae75f15c-dd38-4527-8e56-310c6aebad5b", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:12.222950Z", "completed_at": "2024-07-25T10:10:12.234837Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:12.235563Z", "completed_at": "2024-07-25T10:10:12.553987Z"}], "thread_id": "Thread-1", "execution_time": 0.33379459381103516, "adapter_response": {"_message": "SELECT 23363", "code": "SELECT", "rows_affected": 23363}, "message": "SELECT 23363", "failures": null, "unique_id": "model.scraping_dbt.src_ads", "compiled": true, "compiled_code": "WITH raw_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"ads\"\n    )\n\nSELECT \n    RIGHT(url, 6) AS ad_id,\n    url AS ad_url,\n    lieu AS ad_location,\n    /* CASE WHEN lieu = '-' THEN NULL ELSE REGEXP_SUBSTR(lieu, '^([^(]+)') END AS ad_city, /* Old Method */ */\n    /* CASE WHEN lieu = '-' THEN NULL ELSE REGEXP_SUBSTR(lieu, '\\(([^)]+)\\)') END AS ad_zipcode, /* Old Method */ */\n    /* CASE WHEN lieu = '-' THEN NULL ELSE REGEXP_EXTRACT(lieu, r'^([^(]+)') END AS ad_city, /* For GCP */ */\n    /* CASE WHEN lieu = '-' THEN NULL ELSE REGEXP_EXTRACT(lieu, r'\\(([^)]+)\\)') END AS ad_zipcode, /* For GCP */ */\n    SPLIT_PART(SPLIT_PART(url, '/', 5), '-', 2) AS ad_type,\n    SPLIT_PART(lieu, '(', 1) AS ad_city,\n    SPLIT_PART(SPLIT_PART(lieu, '(', 2), ')', 1) AS ad_zipcode,\n    surface AS ad_surface,\n    COALESCE(nb_chambres, 0) AS ad_nb_bedrooms,\n    /* IFNULL(nb_chambres, 0) AS ad_nb_bedrooms, /* For GCP */ */\n    nb_pieces AS ad_nb_rooms,\n    SUBSTRING(SPLIT_PART(url, '-', -2), 1, 2) AS ad_department,\n    CAST(ROUND(CAST(REPLACE(price, ' ', '') AS NUMERIC)) AS INTEGER) AS ad_price,\n    CAST(ROUND(CAST(REPLACE(prix_m2, ' ', '') AS NUMERIC)) AS INTEGER) AS ad_price_sqm,\n    /* CAST(REPLACE(price, ' ', '') AS INT64) AS ad_price, /* For GCP */ */\n    /* CAST(REPLACE(prix_m2, ' ', '') AS INT64) AS ad_price_sqm, /* For GCP */ */\n    tags AS ad_tags,\n    tag_1 AS ad_tag_1,\n    tag_2 AS ad_tag_2,\n    tag_3 AS ad_tag_3,\n    images_url AS ad_images_url,\n    date_scraped AS ad_date_scraped,\n    TO_DATE(date_publication, 'DD/mm/YYYY') AS ad_published_on,\n    /* PARSE_DATE(\"%d/%m/%Y\", date_publication) AS ad_published_on, /* For GCP */ */\n    created_at,\n    updated_at \n    /* CURRENT_TIMESTAMP() AS created_at,  /* For GCP */ */\n    /* CURRENT_TIMESTAMP() AS updated_at  /* For GCP */ */\nFROM\n    raw_ads", "relation_name": "\"scraping_db\".\"public\".\"src_ads\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:12.561547Z", "completed_at": "2024-07-25T10:10:12.566371Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:12.566999Z", "completed_at": "2024-07-25T10:10:12.622615Z"}], "thread_id": "Thread-1", "execution_time": 0.06306838989257812, "adapter_response": {"_message": "SELECT 246", "code": "SELECT", "rows_affected": 246}, "message": "SELECT 246", "failures": null, "unique_id": "model.scraping_dbt.src_prix_m2", "compiled": true, "compiled_code": "WITH raw_prix_m2 AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"prix_m2_commune\"\n    )\n\nSELECT \n    CASE \n        WHEN LENGTH(CAST(zipcode AS TEXT)) = 4 THEN CONCAT('0', CAST(zipcode AS TEXT))\n        ELSE CAST(zipcode AS TEXT)\n        /* WHEN LENGTH(CAST(zipcode AS STRING)) = 4 THEN CONCAT(\"0\", CAST(zipcode AS STRING))\n        ELSE CAST(zipcode AS STRING) /* For GCP */ */\n        END\n        AS zipcode,\n    city_name,\n    house_type,\n    CAST(prix_m2 AS INTEGER) AS prix_m2\nFROM\n    raw_prix_m2", "relation_name": "\"scraping_db\".\"public\".\"src_prix_m2\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:12.628958Z", "completed_at": "2024-07-25T10:10:12.635204Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:12.635858Z", "completed_at": "2024-07-25T10:10:13.141488Z"}], "thread_id": "Thread-1", "execution_time": 0.514674186706543, "adapter_response": {"_message": "SELECT 233630", "code": "SELECT", "rows_affected": 233630}, "message": "SELECT 233630", "failures": null, "unique_id": "model.scraping_dbt.dim_ads_images_url", "compiled": true, "compiled_code": "WITH src_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads\"\n    )\n\nSELECT \n    ad_id, \n    CASE WHEN ad_image_url = 'None' THEN ad_image_url ELSE REPLACE(ad_image_url, CHR(39), '') END AS ad_image_url    /* CHR(39) is ' */\nFROM\n    src_ads,\n    UNNEST(STRING_TO_ARRAY(REGEXP_REPLACE(ad_images_url, '^\\[|\\]$', ''), ', ')) AS ad_image_url\n    /* UNNEST(SPLIT(REGEXP_REPLACE(ad_images_url, r'^\\[|\\]$', ''), ', ')) AS ad_image_url /* For GCP */ */", "relation_name": "\"scraping_db\".\"public\".\"dim_ads_images_url\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:13.148074Z", "completed_at": "2024-07-25T10:10:13.153483Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:13.154118Z", "completed_at": "2024-07-25T10:10:14.484298Z"}], "thread_id": "Thread-1", "execution_time": 1.3383705615997314, "adapter_response": {"_message": "SELECT 202597", "code": "SELECT", "rows_affected": 202597}, "message": "SELECT 202597", "failures": null, "unique_id": "model.scraping_dbt.dim_ads_tags", "compiled": true, "compiled_code": "WITH \nsrc_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads\"\n    ),\n\ntemp_tags AS (\nSELECT DISTINCT\n    ad_id, \n    CASE WHEN ad_tag = 'None' THEN ad_tag ELSE REPLACE(ad_tag, CHR(39), '') END AS ad_tag    /* CHR(39) is ' */\nFROM\n    src_ads,\n    UNNEST(STRING_TO_ARRAY(REGEXP_REPLACE(ad_tags, '^\\[|\\]$', ''), ', ')) AS ad_tag\n    /* UNNEST(SPLIT(REGEXP_REPLACE(ad_tags, r'^\\[|\\]$', ''), ', ')) AS ad_tag /* For GCP */ */\n\nWHERE \n    ad_tag != 'None' AND ad_tag != ' '\n\nUNION ALL\nSELECT ad_id, ad_tag_1 AS ad_tag FROM src_ads WHERE ad_tag_1 IS NOT NULL AND ad_tag_1 != 'None'\n\nUNION ALL\nSELECT ad_id, ad_tag_2 AS ad_tag FROM src_ads WHERE ad_tag_2 IS NOT NULL AND ad_tag_2 != 'None'\n\nUNION ALL\nSELECT ad_id, ad_tag_3 AS ad_tag FROM src_ads WHERE ad_tag_3 IS NOT NULL AND ad_tag_3 != 'None'\n)\n\nSELECT DISTINCT \n    ad_id, \n    ad_tag\nFROM\n    temp_tags\nORDER BY \n    ad_id, \n    ad_tag", "relation_name": "\"scraping_db\".\"public\".\"dim_ads_tags\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:14.492261Z", "completed_at": "2024-07-25T10:10:14.497274Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:14.497889Z", "completed_at": "2024-07-25T10:10:14.651107Z"}], "thread_id": "Thread-1", "execution_time": 0.16104483604431152, "adapter_response": {"_message": "SELECT 23363", "code": "SELECT", "rows_affected": 23363}, "message": "SELECT 23363", "failures": null, "unique_id": "model.scraping_dbt.fct_ads_price_history", "compiled": true, "compiled_code": "WITH src_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads\"\n),\n\nduplicates AS (\n    SELECT\n        ad_id,\n        ROW_NUMBER() OVER (\n            PARTITION BY ad_id, ad_price\n            ORDER BY ad_published_on, updated_at DESC\n        ) AS update_order,\n\t\tad_published_on,\n        updated_at,\n\t\tad_price\n\tFROM\n        src_ads s\n),\n\nmax_updates_by_ad_id AS (\n\tSELECT \n\t\tad_id, MAX(update_order) AS nb_updates\n\tFROM \n\t\tduplicates d\n\tGROUP BY \n\t\tad_id\n)\n\nSELECT d.*, m.nb_updates FROM duplicates d\nLEFT JOIN max_updates_by_ad_id m ON d.ad_id = m.ad_id \nORDER BY d.ad_id, d.update_order ASC", "relation_name": "\"scraping_db\".\"public\".\"fct_ads_price_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:14.657511Z", "completed_at": "2024-07-25T10:10:14.662641Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:14.663263Z", "completed_at": "2024-07-25T10:10:14.892347Z"}], "thread_id": "Thread-1", "execution_time": 0.23697614669799805, "adapter_response": {"_message": "SELECT 18696", "code": "SELECT", "rows_affected": 18696}, "message": "SELECT 18696", "failures": null, "unique_id": "model.scraping_dbt.src_ads_cleaned", "compiled": true, "compiled_code": "WITH src_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads\"\n),\n\nlatest_ads AS (\n    SELECT\n        ad_id,\n        MAX(updated_at) AS latest_updated_at\n    FROM\n        src_ads\n    GROUP BY\n        ad_id\n),\n\nid_duplicates AS (\n    SELECT\n        s.*\n    FROM\n        src_ads s\n    LEFT JOIN\n        latest_ads la\n    ON\n        s.ad_id = la.ad_id\n        AND s.updated_at = la.latest_updated_at\n    WHERE\n        la.ad_id IS NULL\n)\n\nSELECT * FROM src_ads\nWHERE (ad_id, updated_at) NOT IN (\n    SELECT \n        ad_id,\n\t\tupdated_at\n    FROM   \n        id_duplicates\n)", "relation_name": "\"scraping_db\".\"public\".\"src_ads_cleaned\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:14.900313Z", "completed_at": "2024-07-25T10:10:14.911287Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:14.911923Z", "completed_at": "2024-07-25T10:10:15.023181Z"}], "thread_id": "Thread-1", "execution_time": 0.12520217895507812, "adapter_response": {"_message": "SELECT 23363", "code": "SELECT", "rows_affected": 23363}, "message": "SELECT 23363", "failures": null, "unique_id": "model.scraping_dbt.src_ads_cleaned_backup_incremental", "compiled": true, "compiled_code": "\n\nWITH src_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads\"\n),\n\nexisting_ads AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads\"\n    WHERE False\n),\n\nnew_or_updated_ads AS (\n    SELECT\n        s.ad_id, \n        s.ad_url,\n        s.ad_city,\n        s.ad_zipcode,\n        s.ad_surface,\n        s.ad_nb_bedrooms,\n        s.ad_nb_rooms,\n        s.ad_price,\n        s.ad_price_sqm,\n        s.ad_date_scraped,\n        s.ad_published_on,\n        COALESCE(e.created_at, s.updated_at) AS created_at,\n        s.updated_at\n    FROM src_ads s\n    LEFT JOIN existing_ads e ON s.ad_id = e.ad_id\n    )\n\nSELECT * \nFROM new_or_updated_ads\n/*WHERE \n    NOT False           \n    OR ad_id IS NULL */", "relation_name": "\"scraping_db\".\"public\".\"src_ads_cleaned_backup_incremental\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-25T10:10:15.030168Z", "completed_at": "2024-07-25T10:10:15.036009Z"}, {"name": "execute", "started_at": "2024-07-25T10:10:15.036648Z", "completed_at": "2024-07-25T10:10:15.119270Z"}], "thread_id": "Thread-1", "execution_time": 0.09145474433898926, "adapter_response": {"_message": "SELECT 18696", "code": "SELECT", "rows_affected": 18696}, "message": "SELECT 18696", "failures": null, "unique_id": "model.scraping_dbt.dim_ads_details", "compiled": true, "compiled_code": "WITH src_ads_cleaned AS (\n    SELECT * FROM \"scraping_db\".\"public\".\"src_ads_cleaned\"\n)\n\nSELECT \n    ad_id,\n    ad_url,\n    ad_city,\n    ad_zipcode,\n    ad_nb_bedrooms,\n    ad_nb_rooms,\n    ad_date_scraped AS ad_last_date_scraped,\n    ad_published_on AS ad_last_published_on,\n    created_at,\n    updated_at\nFROM\n    src_ads_cleaned", "relation_name": "\"scraping_db\".\"public\".\"dim_ads_details\""}], "elapsed_time": 3.10512375831604, "args": {"macro_debugging": false, "log_level_file": "debug", "write_json": true, "exclude": [], "print": true, "log_file_max_bytes": 10485760, "introspect": true, "use_colors": true, "profiles_dir": "/opt/airflow/dbt_profiles", "log_level": "info", "which": "run", "defer": false, "static_parser": true, "cache_selected_only": false, "log_format": "default", "invocation_command": "dbt run --profiles-dir /opt/airflow/dbt_profiles", "indirect_selection": "eager", "partial_parse": true, "quiet": false, "require_explicit_package_overrides_for_builtin_materializations": true, "partial_parse_file_diff": true, "empty": false, "show_resource_report": false, "printer_width": 80, "require_resource_names_without_spaces": false, "vars": {}, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "log_format_file": "debug", "populate_cache": true, "select": [], "use_colors_file": true, "favor_state": false, "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "log_path": "/opt/airflow/scraping_dbt/logs", "source_freshness_run_project_hooks": false, "project_dir": "/opt/airflow/scraping_dbt", "strict_mode": false}}